<!ATTR order !>
<!-- Generated by details-generator. Do not edit! -->
<%
_CONDITIONS_ = ::DetailsForMilitaryRestorationOrder.order_conditions(order)
header = import 'header', order
header.conditions = conditions = _CONDITIONS_

%>
<&header&>
<p>
			<p>Ряд студентов, проходивших обучение о программам военной подготовки,
			вернулись из академических отпусков,
			приступили к повторному обучению, либо были восстановлены после
			отстранения от обучения в Университете.</p>

			<p>В соответствии с требованиями Федерального закона &laquo;О воинской обязанности
			и военной службе&raquo;, &laquo;Положения о факультетах военного обучения
			(военных кафедрах) при федеральных государственных образовательных
			учреждениях высшего профессионального образования&raquo;,
			&laquo;Положения об учебных военных центрах при федеральных государственных образовательных
			учреждениях высшего профессионального образования&raquo;,
			утвержденных постановлением Правительства Российской Федерации от 6 марта 2008 г.
			и на основании личных заявлений студентов</p>
		</p>
<div style="text-align: center"><h3>ПРИКАЗЫВАЮ:</h3></div>
<%
list = Class.new(Array)
list.class_eval {
	alias_method :_old_find, :find
	def find(params = nil)
		if params.nil?
			_old_find { |item| yield item }
		else
			_old_find { |item| ret = params.collect { |k,v| item[k] == v }.inject(true) { |x,y| x && y } }
		end
	end
}
self.class.class_eval {
	def fetch(obj, method, *args)
		keys = args[-1]
		ret = []
		obj.__send__(method, *args) { |*values|
			h = {}; keys.each_index { |i|
				h[keys[i].intern] = values[i]
			}; ret << h
		}
		ret
	end
}

_SETS_ = []
_GROUPS_ = nil
@students = list.new(
	  fetch(order, :each_student, :all, %w( faculty_id group name student_id attributes ))
)
_LIST_ = [@students]

	@groups = _GROUPS_ = list.new(
	fetch(order, :each_group, %w( group_id current_term_number group_num group short_name department_num attributes ))
) if order.respond_to? :each_group

%>

<p>
			<%
				year = Date.today.year
				semester = order.attributes['semester'] || 1;
				semester = (if semester == 1 then 'в' else 'во' end) + semester.to_s
			%>
			1. Привлечь к военному обучению <&semester&>-м семестре <&year&>/<&year+1&> учебного года стдентов
			Университета, вышедших из академичекого отпуска, согласно прилагаемого списка.
		</p>

<p>
			2. Директору Военного института организовать обучение граждан
			по программам военной подготовки по соответствующим военно-учетным
			специальностям в соответствии с требованиями &laquo;Положения о факультетах военного
			обучения...&raquo;, &laquo;Положения об учебных военных центрах...&raquo;.
		</p>

<p>
			3. Приказ довести до руководителей НУК, деканов факультетов, директора Военного института
			и студентов, заключивших договор об обучении по программам военной подготовки.
		</p>

<p>
			4. Контроль за исполнением приказа возложить на директора Военного института.
		</p>

<p>
			Список студентов Университета, привлекаемых к обучению по программам
			военной подготовки <&semester&>-м семестре <&year&>/<&year+1&>
			учебного года в связи с окончанием академического отпуска:
		</p>

<%
_SETS_.push Hash.new
_LIST_[-1].each { |item| (_SETS_[-1][item[:faculty_id]] ||= []) << item }
_SETS_[-1].keys.sort.each { |faculty_id|
	next if _SETS_[-1][faculty_id].empty?
	_LIST_.push _SETS_[-1][faculty_id]
	section_index = 0
%>

	<p>
					<h3><& faculty = Faculty.load(faculty_id); faculty.class::NAME &>
					&laquo;<&faculty.name&>&raquo;</h3>
				</p>

	<%
	_SETS_.push Hash.new
	_LIST_[-1].each { |item| (_SETS_[-1][item[:group]] ||= []) << item }
	_SETS_[-1].keys.sort.each { |group|
		next if _SETS_[-1][group].empty?
		_LIST_.push _SETS_[-1][group]
		section_index = 0
	%>

		<p> Группа <&group&> </p>

		<ol>
		<% _LIST_[-1].each { |_ITEM_|
			faculty_id = _ITEM_[:faculty_id]
			group = _ITEM_[:group]
			name = _ITEM_[:name]
			attributes = _ITEM_[:attributes]
		%>
			<li>
			<% _HAS_FIELDS_ = false %>
				<% unless name.empty? then %><% if _HAS_FIELDS_ then %>;
				<% end %><& name &><% _HAS_FIELDS_ = true; end %>
				<% unless group.empty? then %><% if _HAS_FIELDS_ then %>;
				<% end %>Группа: <& group &><% _HAS_FIELDS_ = true; end %>
				<% unless false then %><% if _HAS_FIELDS_ then %>;
				<% end %>
										<% unless attributes['military_department'].empty? %>
										Основание: рапорт начальника военной кафедры
										&#x2116;<&attributes['military_department']&>.
										<% end %>
									<% _HAS_FIELDS_ = true; end %>
			</li>
		<% } %>
		</ol>

	<%
		_LIST_.pop
	}
	_SETS_.pop
	%>

<%
	_LIST_.pop
}
_SETS_.pop
%>

<% _SIGNATURE_INDEX_ = 0 %>
<table class="signatures">

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Ректор МГЛУ</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">И. И. Халеева</td><tr><tr><td></td><td class="small">(подпись)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Проректор по учебной работе</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">И. В. Манохин</td><tr><tr><td></td><td class="small">(подпись)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Начальник управления кадров</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">Ю. И. Вторушин</td><tr><tr><td></td><td class="small">(подпись)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Директор Военного института</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder-unknown">&nbsp;</td><tr><tr><td></td><td class="small">(подпись)</td><td class="signspacer"/><td class="small">(расшифровка подписи)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Юридический отдел</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder-unknown">&nbsp;</td><tr><tr><td></td><td class="small">(подпись)</td><td class="signspacer"/><td class="small">(расшифровка подписи)</td></tr>
</table>


<&import('footer', order)&>
