<!ATTR order !>
<!-- Generated by details-generator. Do not edit! -->
<%
_CONDITIONS_ = ::DetailsForAdjustVacationOrder.order_conditions(order)
header = import 'header', order
header.conditions = conditions = _CONDITIONS_

%>
<&header&>
<p></p>
<div style="text-align: center"><h3>ПРИКАЗЫВАЮ:</h3></div>
<%
list = Class.new(Array)
list.class_eval {
	alias_method :_old_find, :find
	def find(params = nil)
		if params.nil?
			_old_find { |item| yield item }
		else
			_old_find { |item| ret = params.collect { |k,v| item[k] == v }.inject(true) { |x,y| x && y } }
		end
	end
}
self.class.class_eval {
	def fetch(obj, method, *args)
		keys = args[-1]
		ret = []
		obj.__send__(method, *args) { |*values|
			h = {}; keys.each_index { |i|
				h[keys[i].intern] = values[i]
			}; ret << h
		}
		ret
	end
}

_SETS_ = []
_GROUPS_ = nil
@students = list.new(
	  fetch(order, :each_student, 0, %w( group name card_number category study_type student_id attributes )).collect { |item| item | { :SECTION => 1 } }
)
_LIST_ = [@students]

	@groups = _GROUPS_ = list.new(
	fetch(order, :each_group, %w( group_id current_term_number group_num group short_name department_num attributes ))
) if order.respond_to? :each_group

%>

<%
_SETS_.push Hash.new
_LIST_[-1].each { |item| (_SETS_[-1][item[:group]] ||= []) << item }
_SETS_[-1].keys.sort.each { |group|
	next if _SETS_[-1][group].empty?
	_LIST_.push _SETS_[-1][group]
	section_index = 0
%>

	<p>
					<%
					#_group = @groups.find(:group => group)
					%>
					<h3>Группа <%= group %></h3>
				</p>

	<%
	_LIST_.push(_LIST_[-1].collect { |item| item if item[:SECTION] == 1 }.compact)
	unless _LIST_[-1].empty?
	section_index += 1
	%>

		<p>Понизить номер курса у нижеперечисленных студентов, находящихся в академическом отпуске или на стажировке.</p>

		<table class="printable" cellspacing="0"><thead>
			<tr>
				<th class="printleft" rowspan="1">&#x2116; п/п</th>
				<th rowspan="1">Ф.И.О.</th>
				<th rowspan="1">Л.д. &#x2116;</th>
				<th rowspan="1">Форма (основа) обучения</th>
				<th rowspan="1">Числить в группе</th>
			</tr>
		</thead><tbody>
		<% _ITEM_INDEX_ = 0 %>
		<% _LIST_[-1].each { |_ITEM_|
			group = _ITEM_[:group]
			name = _ITEM_[:name]
			card_number = _ITEM_[:card_number]
			category = _ITEM_[:category]
			study_type = _ITEM_[:study_type]
			attributes = _ITEM_[:attributes]
		%>
			<% _ITEM_INDEX_ += 1 %>
			<% _HEIGHT_ = [1].max %>
			<% (0..._HEIGHT_).each { |_ROW_| %>
			<tr>
				<% if _ROW_ == 0 then %><td class="printleft" rowspan="<%= _HEIGHT_ %>"><& _ITEM_INDEX_ &>&nbsp;</td><% end %>
				<% if _ROW_ == 0 then %><td rowspan="<%= _HEIGHT_ %>"><& name &>&nbsp;</td><% end %>
				<% if _ROW_ == 0 then %><td rowspan="<%= _HEIGHT_ %>"><& card_number &>&nbsp;</td><% end %>
				<% if _ROW_ == 0 then %><td rowspan="<%= _HEIGHT_ %>"> <%
									r = [study_type]
									r << 'ОРИСА' if category.include? :foreign
									r << 'ГУИМЦ' if category.include? :disabled
									print r.join(', ')
								%> &nbsp;</td><% end %>
				<% if _ROW_ == 0 then %><td rowspan="<%= _HEIGHT_ %>"><% require 'data/group'; %><%= Group.load(attributes['group_id'].to_i).name %>
			&nbsp;</td><% end %>
			</tr>
			<% } %>
		<% } %>
		</tbody></table>
	<%
	end
	_LIST_.pop
	%>

<%
	_LIST_.pop
}
_SETS_.pop
%>

<% _SIGNATURE_INDEX_ = 0 %>
<table class="signatures">

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Ректор МГЛУ</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">И. И. Халеева</td><tr><tr><td></td><td class="small">(подпись)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Проректор по учебной работе</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">И. В. Манохин</td><tr><tr><td></td><td class="small">(подпись)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Начальник управления кадров</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">Ю. И. Вторушин</td><tr><tr><td></td><td class="small">(подпись)</td></tr>

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Декан факультета &laquo;<%=order.faculty.name%>&raquo;</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder-unknown">&nbsp;</td><tr><tr><td></td><td class="small">(подпись)</td><td class="signspacer"/><td class="small">(расшифровка подписи)</td></tr>
</table>


<&import('footer', order)&>
