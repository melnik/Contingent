<!ATTR order !>
<!-- Generated by details-generator. Do not edit! -->
<%
_CONDITIONS_ = ::DetailsForEverythingModificationOrder.order_conditions(order)
header = import 'header', order
header.conditions = conditions = _CONDITIONS_

%>
<&header&>
<p></p>
<div style="text-align: center"><h3>ПРИКАЗЫВАЮ:</h3></div>
<%
list = Class.new(Array)
list.class_eval {
	alias_method :_old_find, :find
	def find(params = nil)
		if params.nil?
			_old_find { |item| yield item }
		else
			_old_find { |item| ret = params.collect { |k,v| item[k] == v }.inject(true) { |x,y| x && y } }
		end
	end
}
self.class.class_eval {
	def fetch(obj, method, *args)
		keys = args[-1]
		ret = []
		obj.__send__(method, *args) { |*values|
			h = {}; keys.each_index { |i|
				h[keys[i].intern] = values[i]
			}; ret << h
		}
		ret
	end
}

_SETS_ = []
_GROUPS_ = nil
@students = list.new(
	  fetch(order, :each_student, :all, %w( student_id name gender_id card_number group_id birth_date citizenship_id profession_code specialization_code degree_code attributes ))
)
_LIST_ = [@students]

	@groups = _GROUPS_ = list.new(
	fetch(order, :each_group, %w( group_id current_term_number group_num group short_name department_num attributes ))
) if order.respond_to? :each_group

%>

<p>Старые учетные данные нижеперечисленных лиц считать утратившими силу,
		а новые учетные данные обучающихся в МГЛУ признать:</p>

<% _ITEM_INDEX_ = 0 %>
<% _LIST_[-1].each { |_ITEM_|
	student_id = _ITEM_[:student_id]
	name = _ITEM_[:name]
	gender_id = _ITEM_[:gender_id]
	card_number = _ITEM_[:card_number]
	group_id = _ITEM_[:group_id]
	birth_date = _ITEM_[:birth_date]
	citizenship_id = _ITEM_[:citizenship_id]
	profession_code = _ITEM_[:profession_code]
	specialization_code = _ITEM_[:specialization_code]
	degree_code = _ITEM_[:degree_code]
	attributes = _ITEM_[:attributes]
%>
	<h3>&#167; <%= _ITEM_INDEX_ = _ITEM_INDEX_ + 1 %></h3>
	<p>
	<%
	_HAS_FIELDS_ = false %>
	<% unless false then %><% if _HAS_FIELDS_ then %>; <% end %>

					<table class="printable" cellspacing="0">
						<tr>
							<th class="printleft">Перечень учетных данных</th>
							<th>Старые учетные данные</th>
							<th>Новые учетные данные</th>
							<th>Основания</th>
						</tr>

						<tr>
							<td class="printleft">Ф.И.О.</td>
							<td><& name &>&nbsp;</td>
							<% if name != "#{attributes['name']['last']} #{attributes['name']['first']} #{attributes['name']['father']}" %>
								<td><& attributes['name']['last'] &> <& attributes['name']['first'] &> <& attributes['name']['father'] &>&nbsp;</td>
								<td><& attributes['name_basics'] &>&nbsp;</td>
							<% else %>
								<td>&nbsp;</td>
								<td>&nbsp;</td>
							<% end %>
						</tr>

					<% if gender_id != attributes['gender_id'] %>
						<% cl = Classifier::Gender.new %>
						<tr>
							<td class="printleft">Пол</td>
							<td><& cl[gender_id][:name] &>&nbsp;</td>
							<td><& cl[attributes['gender_id']][:name] &>&nbsp;</td>
							<td><& attributes['gender_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if card_number != attributes['card_number'] %>
						<tr>
							<td class="printleft">Л.д. &#x2116;</td>
							<td><& card_number &>&nbsp;</td>
							<td><& attributes['card_number'] &>&nbsp;</td>
							<td><& attributes['card_number_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if group_id != attributes['group_id'] %>
						<tr>
							<td class="printleft">Группа</td>
							<td><& Group.load(group_id) &>&nbsp;</td>
							<td><& Group.load(attributes['group_id']) &>&nbsp;</td>
							<td><& attributes['group_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if birth_date != attributes['birth_date'] %>
						<tr>
							<td class="printleft">Дата рождения</td>
							<td><& birth_date &>&nbsp;</td>
							<td><& attributes['birth_date'] &>&nbsp;</td>
							<td><& attributes['birth_date_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if citizenship_id != attributes['citizenship_id'] %>
						<% cl = Classifier::Citizenship.new %>
						<tr>
							<td class="printleft">Гражданство</td>
							<td><& cl[citizenship_id][:name] &>&nbsp;</td>
							<td><& cl[attributes['citizenship_id']][:name] &>&nbsp;</td>
							<td><& attributes['citizenship_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if profession_code != attributes['profession_code'] %>
						<tr>
							<td class="printleft">Код направления / специальности</td>
							<td><& profession_code &><& specialization_code || '00' &><& degree_code || '00' &>&nbsp;</td>
							<td><& attributes['profession_code'] &><& specialization_code || '00' &><& attributes['degree_code'] || degree_code || '00' &>&nbsp;</td>
							<td><& attributes['profession_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if degree_code != attributes['degree_code'] %>
						<% cl = Classifier::Degree.new %>
						<tr>
							<td class="printleft">Ступень образования</td>
							<td><& cl[degree_code][:name] &>&nbsp;</td>
							<td><& cl[attributes['degree_code']][:name] &>&nbsp;</td>
							<td><& attributes['degree_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					<% if attributes['agreement'] && (agreement = Student.load(student_id).enrollment['agreement']) != attributes['agreement'] %>
						<tr>
							<td class="printleft">Договор/контракт</td>
							<td><& agreement &>&nbsp;</td>
							<td><& attributes['agreement'] &>&nbsp;</td>
							<td><& attributes['agreement_basics'] &>&nbsp;</td>
						</tr>
					<% end %>

					</table>

				<% _HAS_FIELDS_ = true;
	 end %>
	<% if _HAS_FIELDS_ then %>.<% end %>
	</p>
<% } %>

<% _SIGNATURE_INDEX_ = 0 %>
<table class="signatures">

	<% if (_SIGNATURE_INDEX_ += 1) == 2 then %><tr><td colspan="3"><b>Согласовано:</b></td></tr><% end %>
	<tr><td>Начальник управления кадров</td><td class="signature">&nbsp;</td><td class="signspacer"/><td class="holder">Ю. И. Вторушин</td><tr><tr><td></td><td class="small">(подпись)</td></tr>
</table>


<&import('footer', order)&>
