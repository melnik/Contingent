<!ATTR order !>
<!-- Generated by details-generator. Do not edit! -->
<%
_CONDITIONS_ = ::DetailsForBeginTraineeOrder.order_conditions(order)
header = import 'header', order
header.conditions = conditions = _CONDITIONS_

%>
<&header&>
<p></p>
<div style="text-align: center"><h3>ПРИКАЗЫВАЮ:</h3></div>
<%
list = Class.new(Array)
list.class_eval {
	alias_method :_old_find, :find
	def find(params = nil)
		if params.nil?
			_old_find { |item| yield item }
		else
			_old_find { |item| ret = params.collect { |k,v| item[k] == v }.inject(true) { |x,y| x && y } }
		end
	end
}
self.class.class_eval {
	def fetch(obj, method, *args)
		keys = args[-1]
		ret = []
		obj.__send__(method, *args) { |*values|
			h = {}; keys.each_index { |i|
				h[keys[i].intern] = values[i]
			}; ret << h
		}
		ret
	end
}

_SETS_ = []
_GROUPS_ = nil
@students = list.new(
	  fetch(order, :each_student, :all, %w( name card_number group student_id attributes ))
)
_LIST_ = [@students]

	@groups = _GROUPS_ = list.new(
	fetch(order, :each_group, %w( group_id current_term_number group_num group short_name department_num attributes ))
) if order.respond_to? :each_group

%>

<p>Считать нижеперечисленных лиц, обучающихся в МГЛУ, находящимися на стажировке за границей:</p>

<% _ITEM_INDEX_ = 0 %>
<% _LIST_[-1].each { |_ITEM_|
	name = _ITEM_[:name]
	card_number = _ITEM_[:card_number]
	group = _ITEM_[:group]
	attributes = _ITEM_[:attributes]
%>
	<h3>&#167; <%= _ITEM_INDEX_ = _ITEM_INDEX_ + 1 %></h3>
	<p>
	<%
	_HAS_FIELDS_ = false %>
	<% unless name.empty? then %><% if _HAS_FIELDS_ then %>; <% end %>
	<& name &><% _HAS_FIELDS_ = true;
	 end %>
	<% unless card_number.empty? then %><% if _HAS_FIELDS_ then %>; <% end %>
	Л.д. &#x2116;: <& card_number &><% _HAS_FIELDS_ = true;
	 end %>
	<% unless group.empty? then %><% if _HAS_FIELDS_ then %>; <% end %>
	Группа: <& group &><% _HAS_FIELDS_ = true;
	 end %>
	<% unless attributes['start_at'].empty? then %><% if _HAS_FIELDS_ then %>; <% end %>
	Считать на стажировке с: <&attributes['start_at']&>
	<% _HAS_FIELDS_ = true;
	 end %>
	<% unless attributes['order'].empty? then %><% if _HAS_FIELDS_ then %>; <% end %>
	Приказ: <&attributes['order']&>
	<% _HAS_FIELDS_ = true;
	 end %>
	<% if _HAS_FIELDS_ then %>.<% end %>
	</p>
<% } %>


<&import('footer', order)&>
