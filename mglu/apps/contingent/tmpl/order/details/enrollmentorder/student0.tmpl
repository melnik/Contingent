<!ATTR __conditions__ name agreement assignment citizenship_id specialization_code country_id card_number group_id birth_date gender_id note profession_code passport special_assignment !>
<!-- Generated by details-generator. Do not edit! -->
<script src='/tools/datecontrol.js'></script>
<script src='/tools/groupcontrol.js'></script>
<br/>

фамилия <input type='text' name='name_last' value='<&name['last']&>' />
имя <input type='text' name='name_first' value='<&name['first']&>' />
отчество <input type='text' name='name_father' value='<&name['father']&>' />
<br/>
Пол
<% classifier = Classifier::Gender.new('gender_id')
   classifier.select(gender_id)
   classifier = import('/widgets/classifier/coded_select', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
<br/>
Дата рождения
<&import('/widgets/date', 'birth_date', birth_date)&>
<br/>
Паспорт
<input type='text' name='passport' value='<&passport&>' />
<br/>
Гражданство
<% classifier = Classifier::Citizenship.new('citizenship_id')
   classifier.select(citizenship_id)
   classifier = import('/widgets/classifier/coded_select', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
<br/>
Л.д. №
<input type='text' name='card_number' value='<&card_number&>' />
<br/>
Группа
<&import('/widgets/group', 'group_id', { 'group_id' => group_id, 'fixed' => {  }})&>
<br/>
Направление / специальность
<% classifier = Classifier::Profession.new('profession_code')
   classifier.select(profession_code)
   classifier = import('/widgets/classifier/coded_input', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
<br/>
Код специализации
<input type='text' name='specialization_code' value='<&specialization_code&>' />
<br/>
<% if __conditions__['contract'] or __conditions__['foreign'] or __conditions__['special'] then %>
Договор/контракт
&#x2116; <input type='text' name='agreement_num' value='<&agreement['num']&>' />
от <&import('/widgets/date', 'agreement_date', agreement['date'])&>
<% end %>
<br/>
<% if __conditions__['foreign'] then %>
Страна
<% classifier = Classifier::Country.new('country_id')
   classifier.select(country_id)
   classifier = import('/widgets/classifier/coded_select', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
<% end %>
<br/>
Направление Министерства образования и науки РФ
&#x2116; <input type='text' name='assignment_num' value='<&assignment['num']&>' />
от <&import('/widgets/date', 'assignment_date', assignment['date'])&>
<br/>
<% if __conditions__['special'] then %>
Направление для поступления
<input type='text' name='special_assignment' value='<&special_assignment&>' />
<% end %>
<br/>
Примечание
<input type='text' name='note' value='<&note&>' />
<br/>
