<!ATTR __conditions__ name agreement card_number_basics degree_code citizenship_id study_type_basics birth_date_basics agreement_basics degree_basics card_number birth_date group_id gender_basics gender_id name_basics group_basics profession_basics profession_code citizenship_basics study_type_id !>
<!-- Generated by details-generator. Do not edit! -->
<script src='/tools/groupcontrol.js'></script>
<script src='/tools/datecontrol.js'></script>
<br/>
Ф.И.О.
фамилия <input type='text' name='name_last' value='<&name['last']&>' />
имя <input type='text' name='name_first' value='<&name['first']&>' />
отчество <input type='text' name='name_father' value='<&name['father']&>' />
Основания
<input type='text' name='name_basics' value='<&name_basics&>' />
<br/>
Пол
<% classifier = Classifier::Gender.new('gender_id')
   classifier.select(gender_id)
   classifier = import('/widgets/classifier/coded_select', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
Основания
<input type='text' name='gender_basics' value='<&gender_basics&>' />
<br/>
Л.д. &#x2116;
<input type='text' name='card_number' value='<&card_number&>' />
Основания
<input type='text' name='card_number_basics' value='<&card_number_basics&>' />
<br/>
Группа
<&import('/widgets/group', 'group_id', { 'group_id' => group_id, 'fixed' => {  }})&>
Основания
<input type='text' name='group_basics' value='<&group_basics&>' />
<br/>
Дата рождения
<&import('/widgets/date', 'birth_date', birth_date)&>
Основания
<input type='text' name='birth_date_basics' value='<&birth_date_basics&>' />
<br/>
Основа обучения
<% classifier = Classifier::StudyType.new('study_type_id')
   classifier.select(study_type_id)
   classifier = import('/widgets/classifier/simple', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
Основания
<input type='text' name='study_type_basics' value='<&study_type_basics&>' />
<br/>
Гражданство
<% classifier = Classifier::Citizenship.new('citizenship_id')
   classifier.select(citizenship_id)
   classifier = import('/widgets/classifier/coded_select', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
Основания
<input type='text' name='citizenship_basics' value='<&citizenship_basics&>' />
<br/>
Код направления/специальности
<% classifier = Classifier::Profession.new('profession_code')
   classifier.select(profession_code)
   classifier = import('/widgets/classifier/coded_input', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
Основания
<input type='text' name='profession_basics' value='<&profession_basics&>' />
<br/>
Ступень образования
<% classifier = Classifier::Degree.new('degree_code')
   classifier.select(degree_code)
   classifier = import('/widgets/classifier/coded_input', classifier, true, false)
   classifier.display_empty = false if classifier.respond_to? 'display_empty='
   print classifier.to_html %>
Основания
<input type='text' name='degree_basics' value='<&degree_basics&>' />
<br/>
Договор/контракт
&#x2116; <input type='text' name='agreement_num' value='<&agreement['num']&>' />
от <&import('/widgets/date', 'agreement_date', agreement['date'])&>
Основания
<input type='text' name='agreement_basics' value='<&agreement_basics&>' />
<br/>
